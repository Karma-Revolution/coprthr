g++ -I./ -I/usr/local/atistream/include -I/usr/local/browndeer/include -I/disk0/richie/projects/vector/pete-2.1.0/src -o test_clvector_clete   test_clvector_clete.cpp -L/usr/local/atistream/lib -lOpenCL -L/usr/local/browndeer/lib -lstdcl_d
/usr/local/browndeer/include/CLETE/OperatorTags.h: In member function ‘typename UnaryReturn<T, FnSqrt>::Type_t FnSqrt::operator()(const T&) const [with T = float]’:
/usr/local/browndeer/include/CLETE/Combiners.h:259:   instantiated from ‘static typename UnaryReturn<A, Op>::Type_t Combine1<A, Op, OpCombine>::combine(A, Op, OpCombine) [with A = float, Op = FnSqrt]’
/usr/local/browndeer/include/CLETE/ForEach.h:103:   instantiated from ‘static typename Combine1<typename ForEach<A, FTag, CTag>::Type_t, Op, CTag>::Type_t ForEach<UnaryNode<Op, A>, FTag, CTag>::apply(const UnaryNode<Op, A>&, const FTag&, const CTag&) [with Op = FnSqrt, A = Reference<clvector<float, clmalloc_allocator<float> > >, FTag = EvalLeaf1, CTag = OpCombine]’
/usr/local/browndeer/include/CLETE/ForEach.h:120:   instantiated from ‘static typename Combine2<typename ForEach<A, FTag, CTag>::Type_t, typename ForEach<B, FTag, CTag>::Type_t, Op, CTag>::Type_t ForEach<BinaryNode<Op, A, B>, FTag, CTag>::apply(const BinaryNode<Op, A, B>&, const FTag&, const CTag&) [with Op = OpAdd, A = BinaryNode<OpAdd, BinaryNode<OpAdd, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, BinaryNode<OpMultiply, Scalar<float>, Reference<clvector<float, clmalloc_allocator<float> > > > >, B = UnaryNode<FnSqrt, Reference<clvector<float, clmalloc_allocator<float> > > >, FTag = EvalLeaf1, CTag = OpCombine]’
/usr/local/browndeer/include/CLETE/ForEach.h:120:   instantiated from ‘static typename Combine2<typename ForEach<A, FTag, CTag>::Type_t, typename ForEach<B, FTag, CTag>::Type_t, Op, CTag>::Type_t ForEach<BinaryNode<Op, A, B>, FTag, CTag>::apply(const BinaryNode<Op, A, B>&, const FTag&, const CTag&) [with Op = OpSubtract, A = BinaryNode<OpAdd, BinaryNode<OpAdd, BinaryNode<OpAdd, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, BinaryNode<OpMultiply, Scalar<float>, Reference<clvector<float, clmalloc_allocator<float> > > > >, UnaryNode<FnSqrt, Reference<clvector<float, clmalloc_allocator<float> > > > >, B = BinaryNode<OpMultiply, BinaryNode<OpMultiply, BinaryNode<OpMultiply, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > >, FTag = EvalLeaf1, CTag = OpCombine]’
/usr/local/browndeer/include/CLETE/ForEach.h:156:   instantiated from ‘static typename ForEach<Expr, FTag, CTag>::Type_t ForEach<Expression<T>, FTag, CTag>::apply(const Expression<T>&, const FTag&, const CTag&) [with T = BinaryNode<OpSubtract, BinaryNode<OpAdd, BinaryNode<OpAdd, BinaryNode<OpAdd, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, BinaryNode<OpMultiply, Scalar<float>, Reference<clvector<float, clmalloc_allocator<float> > > > >, UnaryNode<FnSqrt, Reference<clvector<float, clmalloc_allocator<float> > > > >, BinaryNode<OpMultiply, BinaryNode<OpMultiply, BinaryNode<OpMultiply, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > > >, FTag = EvalLeaf1, CTag = OpCombine]’
/usr/local/browndeer/include/CLETE/ForEach.h:89:   instantiated from ‘typename ForEach<Expr, FTag, CTag>::Type_t forEach(const Expr&, const FTag&, const CTag&) [with Expr = Expression<BinaryNode<OpSubtract, BinaryNode<OpAdd, BinaryNode<OpAdd, BinaryNode<OpAdd, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, BinaryNode<OpMultiply, Scalar<float>, Reference<clvector<float, clmalloc_allocator<float> > > > >, UnaryNode<FnSqrt, Reference<clvector<float, clmalloc_allocator<float> > > > >, BinaryNode<OpMultiply, BinaryNode<OpMultiply, BinaryNode<OpMultiply, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > > > >, FTag = EvalLeaf1, CTag = OpCombine]’
/usr/local/browndeer/include/CLETE/clvector_CLETE.h:377:   instantiated from ‘void evaluate(clvector<T, Allocator>&, const Op&, const Expression<RHS>&) [with T = float, Allocator = clmalloc_allocator<float>, Op = OpAssign, RHS = BinaryNode<OpSubtract, BinaryNode<OpAdd, BinaryNode<OpAdd, BinaryNode<OpAdd, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, BinaryNode<OpMultiply, Scalar<float>, Reference<clvector<float, clmalloc_allocator<float> > > > >, UnaryNode<FnSqrt, Reference<clvector<float, clmalloc_allocator<float> > > > >, BinaryNode<OpMultiply, BinaryNode<OpMultiply, BinaryNode<OpMultiply, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > > >]’
/usr/local/browndeer/include/CLETE/clvector_Operators.h:3012:   instantiated from ‘clvector<T1, clmalloc_allocator<T> >& assign(clvector<T1, clmalloc_allocator<T> >&, const RHS&) [with T1 = float, RHS = Expression<BinaryNode<OpSubtract, BinaryNode<OpAdd, BinaryNode<OpAdd, BinaryNode<OpAdd, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, BinaryNode<OpMultiply, Scalar<float>, Reference<clvector<float, clmalloc_allocator<float> > > > >, UnaryNode<FnSqrt, Reference<clvector<float, clmalloc_allocator<float> > > > >, BinaryNode<OpMultiply, BinaryNode<OpMultiply, BinaryNode<OpMultiply, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > > > >]’
/usr/local/browndeer/include/clvector.h:89:   instantiated from ‘clvector<T, Allocator>& clvector<T, A>::operator=(const Expression<RHS>&) [with RHS = BinaryNode<OpSubtract, BinaryNode<OpAdd, BinaryNode<OpAdd, BinaryNode<OpAdd, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, BinaryNode<OpMultiply, Scalar<float>, Reference<clvector<float, clmalloc_allocator<float> > > > >, UnaryNode<FnSqrt, Reference<clvector<float, clmalloc_allocator<float> > > > >, BinaryNode<OpMultiply, BinaryNode<OpMultiply, BinaryNode<OpMultiply, Reference<clvector<float, clmalloc_allocator<float> > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > >, Reference<clvector<float, clmalloc_allocator<float> > > > >, T = float, A = clmalloc_allocator<float>]’
test_clvector_clete.cpp:23:   instantiated from here
/usr/local/browndeer/include/CLETE/OperatorTags.h:206: error: no matching function for call to ‘sqrt(const float&)’
make: *** [test_clvector_clete] Error 1
