/* vcore.h 
 *
 * Copyright (c) 2009-2010 Brown Deer Technology, LLC.  All Rights Reserved.
 *
 * This software was developed by Brown Deer Technology, LLC.
 * For more information contact info@browndeertechnology.com
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License version 3 (LGPLv3)
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* DAR */

#ifndef _VCORE_H
#define _VCORE_H

#include <stdint.h>
#include <ucontext.h>

#ifndef __xcl_kcall__
#include "cmdcall.h"
#endif

/* XXX DO NOT use VCORE > 1 at this time -DAR */

#define VCORE_NE				2			/* number of engines 				*/
#define VCORE_NC				16			/* number of vcores per engine 	*/
#define VCORE_STACK_SZ		16384		/* stack size per vcore 			*/
#define VCORE_LOCAL_MEM_SZ	32768		/* local mem size per engine		*/

struct vcengine_data {
	int veid;

	void* funcp;
	void* callp;
	void** pr_arg_vec;
	void* pr_arg_buf;

	int vc_runc;
};

struct work_struct {
	unsigned int tdim;
	size_t ltsz[3];
	size_t gsz[3];
	size_t gtsz[3];
	size_t gid[3];
	size_t gtid[3];
};

struct vc_data {
	int vcid;
	ucontext_t* this_uctx;
	ucontext_t* next_uctx;
	struct work_struct* workp;
	size_t ltid[3];
};

//struct work_struct {
//	uint dim;
//	size_t gtsz[3];
//	size_t gtid[3];
//	size_t ltsz[3];
//	size_t ltid[3];
//	size_t gsz[3];
//	size_t gid[3];
//};

struct vcengine_init_arg {
	int dummy;
};

#define VCORE_STACK_MASK (~(VCORE_STACK_SZ-1))
#define __fp() __builtin_frame_address(0)
#define __getvcdata() (struct vc_data*)(((intptr_t)__fp())&VCORE_STACK_MASK)


#ifndef __xcl_kcall__

void* vcproc_startup(void*);
//void* vcproc_destroy(void*);

void* vcproc_cmd( struct cmdcall_arg* );

#endif

#endif

