### 
### Makefile for libocl
###

ifneq (@MAKE@,)
MAKE = @MAKE@
endif

prefix=@prefix@
exec_prefix=@exec_prefix@

### this useless define is needed to silence useless autoconf warning
datarootdir=@datarootdir@

LIBELF_INC=@libelf_inc@
LIBELF_LIB=@libelf_lib@

LIBEVENT_INC=@LIBEVENT_INC@

#DEFS += -DOCL_DEBUG 
#DEFS += -DOCL_WARN

#DEFS += -DENABLE_PRINTCL

#DEFS += -DUSE_FAST_SETJMP	# ONLY USE THIS IF YOU KNOW WHAT YOU ARE DOING

### select default install paths 
INSTALL_BIN_DIR=@bindir@
INSTALL_LIB_DIR=@libdir@
INSTALL_INCLUDE_DIR=@includedir@
INSTALL_MAN_DIR=@mandir@

############################################################################
##### DO NOT MODIFY BELOW THIS LINE UNLESS YOU KNOW WHAT YOU ARE DOING #####
############################################################################

OBJS = libocl.o oclcall.o 

DEFS += -DINSTALL_LIB_DIR=\"$(INSTALL_LIB_DIR)\" 

ifneq (@OPENCL_ICD_PATH@,)
DEFS += -DOPENCL_ICD_PATH=\"@OPENCL_ICD_PATH@\"
endif

#ifeq (@ENABLE_DEBUG_LIBS@,1)
#DEFS += -DOCL_DEBUG 
#endif

ifeq (@ENABLE_SILENT@,1)
DEFS += -DENABLE_SILENT
endif
ifneq (@MAX_CLMESG_LEVEL@,)
DEFS += -DMAX_CLMESG_LEVEL=@MAX_CLMESG_LEVEL@
endif
ifneq (@DEFAULT_CLMESG_LEVEL@,)
DEFS += -DDEFAULT_CLMESG_LEVEL=@DEFAULT_CLMESG_LEVEL@
endif

ifeq (@ENABLE_LIBOCL_HOOK@,1)
DEFS += -DENABLE_LIBOCL_HOOK
OBJS += oclcall_hook.o
endif

ifeq (@ENABLE_USER_INSTALL@,1)
VAR_CLPROC_PATH=$(prefix)/var/clproc
else
VAR_CLPROC_PATH=/var/clproc
endif

######################################################################

TOPDIR ?= ../../

INCS += -I. -I$(TOPDIR)/include  -I../libclrpc
INCS += -I@LIBEVENT_PATH@/include
INCS += $(LIBELF_INC)

 

LIBS += $(LIBELF_LIB)

#LIBS += -lfl  -lpthread -lrt

ifeq (freebsd,$(patsubst freebsd%,freebsd,@build_os@))
LIBS += -lc 
else
LIBS += -ldl 
endif

INCS += -I@LIBCONFIG_PATH@/include 
LIBS += -L@LIBCONFIG_PATH@/lib -lconfig

#LIBS += -L../libclrpc -lclrpc

#OBJS_D = $(subst .o,_d.o,$(OBJS))

DEFS += \
	-DINSTALL_BIN_DIR=\"$(INSTALL_BIN_DIR)\" \
	-DINSTALL_LIB_DIR=\"$(INSTALL_LIB_DIR)\" \
	-DINSTALL_INCLUDE_DIR=\"$(INSTALL_INCLUDE_DIR)\" 

DEFS += -DVAR_CLPROC_PATH=\"$(VAR_CLPROC_PATH)\"

#CCFLAGS += -O1 -fPIC -fbounds-check -g
CCFLAGS += -O1 -fPIC 
CCFLAGS_VCORE_RT = -O1 -fPIC -funroll-loops -fstrict-aliasing


TARGET = libocl.so $(RT_OBJS) 
#ifeq (@ENABLE_DEBUG_LIBS@,1)
#TARGET += libocl_d.so
#endif

all: $(TARGET) 

.PHONY: clean install uninstall

.SUFFIXES:
.SUFFIXES: .l .y .S .s .c .o

.c.o:
	$(CC) $(CCFLAGS) $(DEFS) $(INCS) -c $<

.s.o:
	$(CC) $(CCFLAGS) $(DEFS) $(INCS) -c $<

.S.o:
	$(CC) $(CCFLAGS) $(DEFS) $(INCS) -c $<

#%_d.o:
#	$(CC) $(CCFLAGS) $(DEFS) -DOCL_DEBUG $(INCS) -c $*.c -o $*_d.o

oclcall.o: oclcall.master
	perl gen_oclcall.pl
	$(CC) $(CCFLAGS) $(DEFS) $(INCS) -c oclcall.c

oclcall_hook.o: oclcall.master
	perl gen_oclcall_hook.pl
	$(CC) $(CCFLAGS) $(DEFS) $(INCS) -c oclcall_hook.c

libocl.so: oclcall.o $(OBJS) $(RT_OBJS)
	$(CC) $(CCFLAGS) $(INCS) \
		-shared -Wl,-soname,libocl.so -o libocl.so  $(OBJS) $(LIBS)

#libocl_d.so: $(OBJS_D) $(RT_OBJS)
#	$(CC) $(CCFLAGS) $(INCS) \
#		-shared -Wl,-soname,libocl_d.so -o libocl_d.so  $(OBJS_D) $(LIBS)

debug:
	export ENABLE_DEBUG=1
	$(MAKE) -f Makefile all


install: 
	test -d $(INSTALL_INCLUDE_DIR) || install -m 755 -d $(INSTALL_INCLUDE_DIR)
	test -d $(INSTALL_LIB_DIR) || install -m 755 -d $(INSTALL_LIB_DIR)
	test -d $(INSTALL_BIN_DIR) || install -m 755 -d $(INSTALL_BIN_DIR)
	install -m 755 libocl.so $(INSTALL_LIB_DIR)
#	install -m 755 libocl_d.so $(INSTALL_LIB_DIR)
#	ln -sf $(INSTALL_LIB_DIR)/libocl.so $(INSTALL_LIB_DIR)/libOpenCL.so
#ifeq ($(ENABLE_DEBUG_LIBCOPRTHR),1)
#	ln -sf $(INSTALL_LIB_DIR)/libocl_d.so $(INSTALL_LIB_DIR)/libOpenCL_d.so
#endif
	test -d $(VAR_CLPROC_PATH) || install -m 777 -d $(VAR_CLPROC_PATH)

uninstall: 
#	rm -f $(INSTALL_LIB_DIR)/libocl.so $(INSTALL_LIB_DIR)/libocl_d.so
#	rm -f $(INSTALL_LIB_DIR)/libOpenCL.so $(INSTALL_LIB_DIR)/libOpenCL_d.so
	rm -f $(INSTALL_LIB_DIR)/libocl.so 
	rm -f $(INSTALL_LIB_DIR)/libOpenCL.so 

clean:
	rm -f *.o *.so
	rm -f oclcall.h oclcall.c

distclean: clean


