.TH CLOPEN "3" "2009-11-10" "libstdcl-0.7" "Standard Compute Layer (CL) Manual"
.SH NAME
clopen, clsym, clclose, clerror, claddr \- programming interface to dynamic CL loader
.SH SYNOPSIS
.B #include <stdcl.h>
.sp
.BI "void* clopen( CONTEXT* " cp ", const char* " filename ", int "  flags );
.sp
.BI "cl_kernel clsym( CONTEXT* " cp ", unsigned int " devnum ", void* " handle ", const char* " symbol ", int " flags );
.sp
.BI "int claddr( CONTEXT* " cp ", void* " addr ", CL_info* " info );
.sp
.B char* clerror( void );
.sp
.BI "int clclose( CONTEXT* " cp ", void* " handle );
.sp
Link with \fI\-lstdcl\fP.
.SH DESCRIPTION
The functions clopen(), clsym(), clclose(), and clerror() implement an
interface for dynamically loading compute layer (CL) kernels.
.PP
The function clopen() loads the CL source or binary program file named by the
NULL-terminated string filename and returns an opaque handle that may be used
as a reference in subsequent calls.  If filename is a NULL pointer then a
handle for the main program executable is returned.  
.PP
The funcion clsym() takes a handle to a CL source or binary program and a
NULL-terminated symbol name and returns the associated CL kernel.  A CL
context pointer and device number must be specififed to identify the 
appropriate CL kernel to return.  If handle is NULL then all CL programs
loaded into the specified CL context are searched.
.PP
The function clclose() decrements the reference count on the associated handle.
If the reference count drops to zero then the CL program is unloaded.
The function clclose() returns the reference count on success and -1 on error.
.PP
The function clerror() returns a human readable string describing the most
recent error that has occured as a result of a call to any of the functions
clopen(), clsym(), clclose() since the last call to clerror().  If no error
has occured NULL is returned.
.PP
The function claddr() takes as an argument a CL kernel and tries to resolve
the name and file where it is located.  Information is returned in the
cl_kernel_info structure:
.sp
.in +4n
.nf
struct cl_kernel_info {
	const char* cli_fname;
	CONTEXT* cli_cp;
	unsigned int cli_devnum;
	const char* cli_kname;
};
.fi
.in
.PP
If no matching kernel is found the fields are set to NULL.  claddr() returns
zero on error and non-zero on success.
.SH EXAMPLE
.SH AUTHOR
Written by David Richie.
.SH REPORTING BUGS
Report bugs to <support@browndeertechnology.com>
.SH COPYRIGHT
Copyright (C) 2009 Brown Deer Technology, LLC.  Licensed under the
GNU Lesser General Public License version 3 (LGPLv3).  
There is NO WARRANTY to the extent permitted by law.
.SH SEE ALSO
clld(1), clload(3), stdcl(3)


