Terminals which are not used

   TARGET
   TYPE
   GENERIC_SYMBOL
   OPEN_BODY
   CLOSE_BODY
   STRING


State 40 conflicts: 1 shift/reduce


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | input line

    3 line: '\n'
    4     | func_dec '\n'
    5     | func_def '\n'
    6     | COMMENT
    7     | LOCAL_SYMBOL TYPEDEF_OPAQUE
    8     | LOCAL_SYMBOL SKIP
    9     | GLOBAL_SYMBOL SKIP
   10     | GLOBAL_SYMBOL_DOT SKIP
   11     | SKIP

   12 func_dec: DECLARE type GLOBAL_SYMBOL '(' ')'
   13         | DECLARE type GLOBAL_SYMBOL '(' args ')'

   14 func_def: DEFINE type GLOBAL_SYMBOL '(' ')' body
   15         | DEFINE type GLOBAL_SYMBOL '(' args ')' body

   16 args: args ',' arg
   17     | arg

   18 arg: type LOCAL_SYMBOL
   19    | type
   20    | VARG

   21 type: datatype
   22     | type addrspace
   23     | type ptrc
   24     | '<' vecn datatype '>'
   25     | '[' vecn type ']'

   26 datatype: TYPE_VOID
   27         | TYPE_INT8
   28         | TYPE_INT16
   29         | TYPE_INT32
   30         | TYPE_INT64
   31         | TYPE_FLOAT
   32         | TYPE_DOUBLE
   33         | TYPE_OPAQUE

   34 addrspace: ADDRSPACE '(' ICONST ')'

   35 ptrc: ptrc '*'
   36     | '*'

   37 body: BODY

   38 vecn: VECN


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4 5
'(' (40) 12 13 14 15 34
')' (41) 12 13 14 15 34
'*' (42) 35 36
',' (44) 16
'<' (60) 24
'>' (62) 24
'[' (91) 25
']' (93) 25
error (256)
TARGET (258)
DECLARE (259) 12 13
DEFINE (260) 14 15
VECN (261) 38
TYPE_OPAQUE (262) 33
TYPE_VOID (263) 26
TYPE_INT8 (264) 27
TYPE_INT16 (265) 28
TYPE_INT32 (266) 29
TYPE_INT64 (267) 30
TYPE_FLOAT (268) 31
TYPE_DOUBLE (269) 32
ADDRSPACE (270) 34
ICONST (271) 34
TYPE (272)
GLOBAL_SYMBOL (273) 9 12 13 14 15
GLOBAL_SYMBOL_DOT (274) 10
LOCAL_SYMBOL (275) 7 8 18
GENERIC_SYMBOL (276)
BODY (277) 37
OPEN_BODY (278)
CLOSE_BODY (279)
COMMENT (280) 6
STRING (281)
VARG (282) 20
TYPEDEF_OPAQUE (283) 7
SKIP (284) 8 9 10 11


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
input (40)
    on left: 1 2, on right: 0 2
line (41)
    on left: 3 4 5 6 7 8 9 10 11, on right: 2
func_dec (42)
    on left: 12 13, on right: 4
func_def (43)
    on left: 14 15, on right: 5
args (44)
    on left: 16 17, on right: 13 15 16
arg (45)
    on left: 18 19 20, on right: 16 17
type (46)
    on left: 21 22 23 24 25, on right: 12 13 14 15 18 19 22 23 25
datatype (47)
    on left: 26 27 28 29 30 31 32 33, on right: 21 24
addrspace (48)
    on left: 34, on right: 22
ptrc (49)
    on left: 35 36, on right: 23 35
body (50)
    on left: 37, on right: 14 15
vecn (51)
    on left: 38, on right: 24 25


state 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


state 1

    0 $accept: input . $end
    2 input: input . line

    $end               shift, and go to state 2
    DECLARE            shift, and go to state 3
    DEFINE             shift, and go to state 4
    GLOBAL_SYMBOL      shift, and go to state 5
    GLOBAL_SYMBOL_DOT  shift, and go to state 6
    LOCAL_SYMBOL       shift, and go to state 7
    COMMENT            shift, and go to state 8
    SKIP               shift, and go to state 9
    '\n'               shift, and go to state 10

    line      go to state 11
    func_dec  go to state 12
    func_def  go to state 13


state 2

    0 $accept: input $end .

    $default  accept


state 3

   12 func_dec: DECLARE . type GLOBAL_SYMBOL '(' ')'
   13         | DECLARE . type GLOBAL_SYMBOL '(' args ')'

    TYPE_OPAQUE  shift, and go to state 14
    TYPE_VOID    shift, and go to state 15
    TYPE_INT8    shift, and go to state 16
    TYPE_INT16   shift, and go to state 17
    TYPE_INT32   shift, and go to state 18
    TYPE_INT64   shift, and go to state 19
    TYPE_FLOAT   shift, and go to state 20
    TYPE_DOUBLE  shift, and go to state 21
    '<'          shift, and go to state 22
    '['          shift, and go to state 23

    type      go to state 24
    datatype  go to state 25


state 4

   14 func_def: DEFINE . type GLOBAL_SYMBOL '(' ')' body
   15         | DEFINE . type GLOBAL_SYMBOL '(' args ')' body

    TYPE_OPAQUE  shift, and go to state 14
    TYPE_VOID    shift, and go to state 15
    TYPE_INT8    shift, and go to state 16
    TYPE_INT16   shift, and go to state 17
    TYPE_INT32   shift, and go to state 18
    TYPE_INT64   shift, and go to state 19
    TYPE_FLOAT   shift, and go to state 20
    TYPE_DOUBLE  shift, and go to state 21
    '<'          shift, and go to state 22
    '['          shift, and go to state 23

    type      go to state 26
    datatype  go to state 25


state 5

    9 line: GLOBAL_SYMBOL . SKIP

    SKIP  shift, and go to state 27


state 6

   10 line: GLOBAL_SYMBOL_DOT . SKIP

    SKIP  shift, and go to state 28


state 7

    7 line: LOCAL_SYMBOL . TYPEDEF_OPAQUE
    8     | LOCAL_SYMBOL . SKIP

    TYPEDEF_OPAQUE  shift, and go to state 29
    SKIP            shift, and go to state 30


state 8

    6 line: COMMENT .

    $default  reduce using rule 6 (line)


state 9

   11 line: SKIP .

    $default  reduce using rule 11 (line)


state 10

    3 line: '\n' .

    $default  reduce using rule 3 (line)


state 11

    2 input: input line .

    $default  reduce using rule 2 (input)


state 12

    4 line: func_dec . '\n'

    '\n'  shift, and go to state 31


state 13

    5 line: func_def . '\n'

    '\n'  shift, and go to state 32


state 14

   33 datatype: TYPE_OPAQUE .

    $default  reduce using rule 33 (datatype)


state 15

   26 datatype: TYPE_VOID .

    $default  reduce using rule 26 (datatype)


state 16

   27 datatype: TYPE_INT8 .

    $default  reduce using rule 27 (datatype)


state 17

   28 datatype: TYPE_INT16 .

    $default  reduce using rule 28 (datatype)


state 18

   29 datatype: TYPE_INT32 .

    $default  reduce using rule 29 (datatype)


state 19

   30 datatype: TYPE_INT64 .

    $default  reduce using rule 30 (datatype)


state 20

   31 datatype: TYPE_FLOAT .

    $default  reduce using rule 31 (datatype)


state 21

   32 datatype: TYPE_DOUBLE .

    $default  reduce using rule 32 (datatype)


state 22

   24 type: '<' . vecn datatype '>'

    VECN  shift, and go to state 33

    vecn  go to state 34


state 23

   25 type: '[' . vecn type ']'

    VECN  shift, and go to state 33

    vecn  go to state 35


state 24

   12 func_dec: DECLARE type . GLOBAL_SYMBOL '(' ')'
   13         | DECLARE type . GLOBAL_SYMBOL '(' args ')'
   22 type: type . addrspace
   23     | type . ptrc

    ADDRSPACE      shift, and go to state 36
    GLOBAL_SYMBOL  shift, and go to state 37
    '*'            shift, and go to state 38

    addrspace  go to state 39
    ptrc       go to state 40


state 25

   21 type: datatype .

    $default  reduce using rule 21 (type)


state 26

   14 func_def: DEFINE type . GLOBAL_SYMBOL '(' ')' body
   15         | DEFINE type . GLOBAL_SYMBOL '(' args ')' body
   22 type: type . addrspace
   23     | type . ptrc

    ADDRSPACE      shift, and go to state 36
    GLOBAL_SYMBOL  shift, and go to state 41
    '*'            shift, and go to state 38

    addrspace  go to state 39
    ptrc       go to state 40


state 27

    9 line: GLOBAL_SYMBOL SKIP .

    $default  reduce using rule 9 (line)


state 28

   10 line: GLOBAL_SYMBOL_DOT SKIP .

    $default  reduce using rule 10 (line)


state 29

    7 line: LOCAL_SYMBOL TYPEDEF_OPAQUE .

    $default  reduce using rule 7 (line)


state 30

    8 line: LOCAL_SYMBOL SKIP .

    $default  reduce using rule 8 (line)


state 31

    4 line: func_dec '\n' .

    $default  reduce using rule 4 (line)


state 32

    5 line: func_def '\n' .

    $default  reduce using rule 5 (line)


state 33

   38 vecn: VECN .

    $default  reduce using rule 38 (vecn)


state 34

   24 type: '<' vecn . datatype '>'

    TYPE_OPAQUE  shift, and go to state 14
    TYPE_VOID    shift, and go to state 15
    TYPE_INT8    shift, and go to state 16
    TYPE_INT16   shift, and go to state 17
    TYPE_INT32   shift, and go to state 18
    TYPE_INT64   shift, and go to state 19
    TYPE_FLOAT   shift, and go to state 20
    TYPE_DOUBLE  shift, and go to state 21

    datatype  go to state 42


state 35

   25 type: '[' vecn . type ']'

    TYPE_OPAQUE  shift, and go to state 14
    TYPE_VOID    shift, and go to state 15
    TYPE_INT8    shift, and go to state 16
    TYPE_INT16   shift, and go to state 17
    TYPE_INT32   shift, and go to state 18
    TYPE_INT64   shift, and go to state 19
    TYPE_FLOAT   shift, and go to state 20
    TYPE_DOUBLE  shift, and go to state 21
    '<'          shift, and go to state 22
    '['          shift, and go to state 23

    type      go to state 43
    datatype  go to state 25


state 36

   34 addrspace: ADDRSPACE . '(' ICONST ')'

    '('  shift, and go to state 44


state 37

   12 func_dec: DECLARE type GLOBAL_SYMBOL . '(' ')'
   13         | DECLARE type GLOBAL_SYMBOL . '(' args ')'

    '('  shift, and go to state 45


state 38

   36 ptrc: '*' .

    $default  reduce using rule 36 (ptrc)


state 39

   22 type: type addrspace .

    $default  reduce using rule 22 (type)


state 40

   23 type: type ptrc .
   35 ptrc: ptrc . '*'

    '*'  shift, and go to state 46

    '*'       [reduce using rule 23 (type)]
    $default  reduce using rule 23 (type)


state 41

   14 func_def: DEFINE type GLOBAL_SYMBOL . '(' ')' body
   15         | DEFINE type GLOBAL_SYMBOL . '(' args ')' body

    '('  shift, and go to state 47


state 42

   24 type: '<' vecn datatype . '>'

    '>'  shift, and go to state 48


state 43

   22 type: type . addrspace
   23     | type . ptrc
   25     | '[' vecn type . ']'

    ADDRSPACE  shift, and go to state 36
    ']'        shift, and go to state 49
    '*'        shift, and go to state 38

    addrspace  go to state 39
    ptrc       go to state 40


state 44

   34 addrspace: ADDRSPACE '(' . ICONST ')'

    ICONST  shift, and go to state 50


state 45

   12 func_dec: DECLARE type GLOBAL_SYMBOL '(' . ')'
   13         | DECLARE type GLOBAL_SYMBOL '(' . args ')'

    TYPE_OPAQUE  shift, and go to state 14
    TYPE_VOID    shift, and go to state 15
    TYPE_INT8    shift, and go to state 16
    TYPE_INT16   shift, and go to state 17
    TYPE_INT32   shift, and go to state 18
    TYPE_INT64   shift, and go to state 19
    TYPE_FLOAT   shift, and go to state 20
    TYPE_DOUBLE  shift, and go to state 21
    VARG         shift, and go to state 51
    ')'          shift, and go to state 52
    '<'          shift, and go to state 22
    '['          shift, and go to state 23

    args      go to state 53
    arg       go to state 54
    type      go to state 55
    datatype  go to state 25


state 46

   35 ptrc: ptrc '*' .

    $default  reduce using rule 35 (ptrc)


state 47

   14 func_def: DEFINE type GLOBAL_SYMBOL '(' . ')' body
   15         | DEFINE type GLOBAL_SYMBOL '(' . args ')' body

    TYPE_OPAQUE  shift, and go to state 14
    TYPE_VOID    shift, and go to state 15
    TYPE_INT8    shift, and go to state 16
    TYPE_INT16   shift, and go to state 17
    TYPE_INT32   shift, and go to state 18
    TYPE_INT64   shift, and go to state 19
    TYPE_FLOAT   shift, and go to state 20
    TYPE_DOUBLE  shift, and go to state 21
    VARG         shift, and go to state 51
    ')'          shift, and go to state 56
    '<'          shift, and go to state 22
    '['          shift, and go to state 23

    args      go to state 57
    arg       go to state 54
    type      go to state 55
    datatype  go to state 25


state 48

   24 type: '<' vecn datatype '>' .

    $default  reduce using rule 24 (type)


state 49

   25 type: '[' vecn type ']' .

    $default  reduce using rule 25 (type)


state 50

   34 addrspace: ADDRSPACE '(' ICONST . ')'

    ')'  shift, and go to state 58


state 51

   20 arg: VARG .

    $default  reduce using rule 20 (arg)


state 52

   12 func_dec: DECLARE type GLOBAL_SYMBOL '(' ')' .

    $default  reduce using rule 12 (func_dec)


state 53

   13 func_dec: DECLARE type GLOBAL_SYMBOL '(' args . ')'
   16 args: args . ',' arg

    ')'  shift, and go to state 59
    ','  shift, and go to state 60


state 54

   17 args: arg .

    $default  reduce using rule 17 (args)


state 55

   18 arg: type . LOCAL_SYMBOL
   19    | type .
   22 type: type . addrspace
   23     | type . ptrc

    ADDRSPACE     shift, and go to state 36
    LOCAL_SYMBOL  shift, and go to state 61
    '*'           shift, and go to state 38

    $default  reduce using rule 19 (arg)

    addrspace  go to state 39
    ptrc       go to state 40


state 56

   14 func_def: DEFINE type GLOBAL_SYMBOL '(' ')' . body

    BODY  shift, and go to state 62

    body  go to state 63


state 57

   15 func_def: DEFINE type GLOBAL_SYMBOL '(' args . ')' body
   16 args: args . ',' arg

    ')'  shift, and go to state 64
    ','  shift, and go to state 60


state 58

   34 addrspace: ADDRSPACE '(' ICONST ')' .

    $default  reduce using rule 34 (addrspace)


state 59

   13 func_dec: DECLARE type GLOBAL_SYMBOL '(' args ')' .

    $default  reduce using rule 13 (func_dec)


state 60

   16 args: args ',' . arg

    TYPE_OPAQUE  shift, and go to state 14
    TYPE_VOID    shift, and go to state 15
    TYPE_INT8    shift, and go to state 16
    TYPE_INT16   shift, and go to state 17
    TYPE_INT32   shift, and go to state 18
    TYPE_INT64   shift, and go to state 19
    TYPE_FLOAT   shift, and go to state 20
    TYPE_DOUBLE  shift, and go to state 21
    VARG         shift, and go to state 51
    '<'          shift, and go to state 22
    '['          shift, and go to state 23

    arg       go to state 65
    type      go to state 55
    datatype  go to state 25


state 61

   18 arg: type LOCAL_SYMBOL .

    $default  reduce using rule 18 (arg)


state 62

   37 body: BODY .

    $default  reduce using rule 37 (body)


state 63

   14 func_def: DEFINE type GLOBAL_SYMBOL '(' ')' body .

    $default  reduce using rule 14 (func_def)


state 64

   15 func_def: DEFINE type GLOBAL_SYMBOL '(' args ')' . body

    BODY  shift, and go to state 62

    body  go to state 66


state 65

   16 args: args ',' arg .

    $default  reduce using rule 16 (args)


state 66

   15 func_def: DEFINE type GLOBAL_SYMBOL '(' args ')' body .

    $default  reduce using rule 15 (func_def)
